// Code generated by xns-informer-gen. DO NOT EDIT.

package v1alpha1

import (
	xnsinformers "github.com/maistra/xns-informer/pkg/informers"
	v1alpha1 "k8s.io/api/settings/v1alpha1"
	informers "k8s.io/client-go/informers/settings/v1alpha1"
	listers "k8s.io/client-go/listers/settings/v1alpha1"
	"k8s.io/client-go/tools/cache"
)

type podPresetInformer struct {
	informer cache.SharedIndexInformer
}

var _ informers.PodPresetInformer = &podPresetInformer{}

func NewPodPresetInformer(f xnsinformers.SharedInformerFactory) informers.PodPresetInformer {
	resource := v1alpha1.SchemeGroupVersion.WithResource("podpresets")
	converter := xnsinformers.NewListWatchConverter(
		f.GetScheme(),
		&v1alpha1.PodPreset{},
		&v1alpha1.PodPresetList{},
	)

	informer := f.ForResource(resource, xnsinformers.ResourceOptions{
		ClusterScoped:      false,
		ListWatchConverter: converter,
	})

	return &podPresetInformer{informer: informer.Informer()}
}

func (i *podPresetInformer) Informer() cache.SharedIndexInformer {
	return i.informer
}

func (i *podPresetInformer) Lister() listers.PodPresetLister {
	return listers.NewPodPresetLister(i.informer.GetIndexer())
}
