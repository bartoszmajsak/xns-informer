// Code generated by xns-informer-gen. DO NOT EDIT.

package v1beta1

import (
	xnsinformers "github.com/maistra/xns-informer/pkg/informers"
	"k8s.io/api/networking/v1beta1"
	informers "k8s.io/client-go/informers/networking/v1beta1"
	listers "k8s.io/client-go/listers/networking/v1beta1"
	"k8s.io/client-go/tools/cache"
)

type ingressClassInformer struct {
	informer cache.SharedIndexInformer
}

var _ informers.IngressClassInformer = &ingressClassInformer{}

func NewIngressClassInformer(f xnsinformers.SharedInformerFactory) informers.IngressClassInformer {
	resource := v1beta1.SchemeGroupVersion.WithResource("ingressclasses")
	informer := f.ClusterResource(resource).Informer()

	return &ingressClassInformer{
		informer: xnsinformers.NewInformerConverter(f.GetScheme(), informer, &v1beta1.IngressClass{}),
	}
}

func (i *ingressClassInformer) Informer() cache.SharedIndexInformer {
	return i.informer
}

func (i *ingressClassInformer) Lister() listers.IngressClassLister {
	return listers.NewIngressClassLister(i.informer.GetIndexer())
}
