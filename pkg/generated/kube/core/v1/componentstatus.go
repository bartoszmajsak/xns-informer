// Code generated by xns-informer-gen. DO NOT EDIT.

package v1

import (
	xnsinformers "github.com/maistra/xns-informer/pkg/informers"
	v1 "k8s.io/api/core/v1"
	informers "k8s.io/client-go/informers/core/v1"
	listers "k8s.io/client-go/listers/core/v1"
	"k8s.io/client-go/tools/cache"
)

type componentStatusInformer struct {
	informer cache.SharedIndexInformer
}

var _ informers.ComponentStatusInformer = &componentStatusInformer{}

func NewComponentStatusInformer(f xnsinformers.SharedInformerFactory) informers.ComponentStatusInformer {
	resource := v1.SchemeGroupVersion.WithResource("componentstatuses")
	informer := f.ClusterResource(resource).Informer()

	return &componentStatusInformer{
		informer: xnsinformers.NewInformerConverter(f.GetScheme(), informer, &v1.ComponentStatus{}),
	}
}

func (i *componentStatusInformer) Informer() cache.SharedIndexInformer {
	return i.informer
}

func (i *componentStatusInformer) Lister() listers.ComponentStatusLister {
	return listers.NewComponentStatusLister(i.informer.GetIndexer())
}
