// Code generated by xns-informer-gen. DO NOT EDIT.

package v1beta1

import (
	xnsinformers "github.com/maistra/xns-informer/pkg/informers"
	v1beta1 "k8s.io/api/rbac/v1beta1"
	informers "k8s.io/client-go/informers/rbac/v1beta1"
	listers "k8s.io/client-go/listers/rbac/v1beta1"
	"k8s.io/client-go/tools/cache"
)

type clusterRoleInformer struct {
	informer cache.SharedIndexInformer
}

var _ informers.ClusterRoleInformer = &clusterRoleInformer{}

func NewClusterRoleInformer(f xnsinformers.SharedInformerFactory) informers.ClusterRoleInformer {
	resource := v1beta1.SchemeGroupVersion.WithResource("clusterroles")
	converter := xnsinformers.NewListWatchConverter(
		f.GetScheme(),
		&v1beta1.ClusterRole{},
		&v1beta1.ClusterRoleList{},
	)

	informer := f.ForResource(resource, xnsinformers.ResourceOptions{
		ClusterScoped:      true,
		ListWatchConverter: converter,
	})

	return &clusterRoleInformer{informer: informer.Informer()}
}

func (i *clusterRoleInformer) Informer() cache.SharedIndexInformer {
	return i.informer
}

func (i *clusterRoleInformer) Lister() listers.ClusterRoleLister {
	return listers.NewClusterRoleLister(i.informer.GetIndexer())
}
