// Code generated by xns-informer-gen. DO NOT EDIT.

package v1beta1

import (
	xnsinformers "github.com/maistra/xns-informer/pkg/informers"
	v1beta1 "k8s.io/api/scheduling/v1beta1"
	informers "k8s.io/client-go/informers/scheduling/v1beta1"
	listers "k8s.io/client-go/listers/scheduling/v1beta1"
	"k8s.io/client-go/tools/cache"
)

type priorityClassInformer struct {
	informer cache.SharedIndexInformer
}

var _ informers.PriorityClassInformer = &priorityClassInformer{}

func NewPriorityClassInformer(f xnsinformers.SharedInformerFactory) informers.PriorityClassInformer {
	resource := v1beta1.SchemeGroupVersion.WithResource("priorityclasses")
	converter := xnsinformers.NewListWatchConverter(
		f.GetScheme(),
		&v1beta1.PriorityClass{},
		&v1beta1.PriorityClassList{},
	)

	informer := f.ForResource(resource, xnsinformers.ResourceOptions{
		ClusterScoped:      true,
		ListWatchConverter: converter,
	})

	return &priorityClassInformer{informer: informer.Informer()}
}

func (i *priorityClassInformer) Informer() cache.SharedIndexInformer {
	return i.informer
}

func (i *priorityClassInformer) Lister() listers.PriorityClassLister {
	return listers.NewPriorityClassLister(i.informer.GetIndexer())
}
