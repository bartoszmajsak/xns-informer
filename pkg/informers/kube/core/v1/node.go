// Code generated by xns-informer-gen. DO NOT EDIT.
package v1

import (
	xnsinformers "github.com/maistra/xns-informer/pkg/informers"
	v1 "k8s.io/api/core/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"
	informers "k8s.io/client-go/informers/core/v1"
	listers "k8s.io/client-go/listers/core/v1"
	"k8s.io/client-go/tools/cache"
)

type nodeInformer struct {
	factory xnsinformers.InformerFactory
}

var _ informers.NodeInformer = &nodeInformer{}

func (f *nodeInformer) resource() schema.GroupVersionResource {
	return v1.SchemeGroupVersion.WithResource("nodes")
}

func (f *nodeInformer) Informer() cache.SharedIndexInformer {
	return f.factory.ClusterResource(f.resource()).Informer()
}

func (f *nodeInformer) Lister() listers.NodeLister {
	idx := xnsinformers.NewCacheConverter(f.Informer().GetIndexer(), &v1.Node{})
	return listers.NewNodeLister(idx)
}
