// Code generated by xns-informer-gen. DO NOT EDIT.
package v1

import (
	xnsinformers "github.com/maistra/xns-informer/pkg/informers"
	informers "k8s.io/client-go/informers/core/v1"
)

type Interface interface {
	ComponentStatuses() informers.ComponentStatusInformer
	ConfigMaps() informers.ConfigMapInformer
	Endpoints() informers.EndpointsInformer
	Events() informers.EventInformer
	LimitRanges() informers.LimitRangeInformer
	Namespaces() informers.NamespaceInformer
	Nodes() informers.NodeInformer
	PersistentVolumes() informers.PersistentVolumeInformer
	PersistentVolumeClaims() informers.PersistentVolumeClaimInformer
	Pods() informers.PodInformer
	PodTemplates() informers.PodTemplateInformer
	ReplicationControllers() informers.ReplicationControllerInformer
	ResourceQuotas() informers.ResourceQuotaInformer
	Secrets() informers.SecretInformer
	Services() informers.ServiceInformer
	ServiceAccounts() informers.ServiceAccountInformer
}

type version struct {
	factory xnsinformers.InformerFactory
}

func New(factory xnsinformers.InformerFactory) Interface {
	return &version{factory: factory}
}
func (v *version) ComponentStatuses() informers.ComponentStatusInformer {
	return &componentStatusInformer{factory: v.factory}
}
func (v *version) ConfigMaps() informers.ConfigMapInformer {
	return &configMapInformer{factory: v.factory}
}
func (v *version) Endpoints() informers.EndpointsInformer {
	return &endpointsInformer{factory: v.factory}
}
func (v *version) Events() informers.EventInformer {
	return &eventInformer{factory: v.factory}
}
func (v *version) LimitRanges() informers.LimitRangeInformer {
	return &limitRangeInformer{factory: v.factory}
}
func (v *version) Namespaces() informers.NamespaceInformer {
	return &namespaceInformer{factory: v.factory}
}
func (v *version) Nodes() informers.NodeInformer {
	return &nodeInformer{factory: v.factory}
}
func (v *version) PersistentVolumes() informers.PersistentVolumeInformer {
	return &persistentVolumeInformer{factory: v.factory}
}
func (v *version) PersistentVolumeClaims() informers.PersistentVolumeClaimInformer {
	return &persistentVolumeClaimInformer{factory: v.factory}
}
func (v *version) Pods() informers.PodInformer {
	return &podInformer{factory: v.factory}
}
func (v *version) PodTemplates() informers.PodTemplateInformer {
	return &podTemplateInformer{factory: v.factory}
}
func (v *version) ReplicationControllers() informers.ReplicationControllerInformer {
	return &replicationControllerInformer{factory: v.factory}
}
func (v *version) ResourceQuotas() informers.ResourceQuotaInformer {
	return &resourceQuotaInformer{factory: v.factory}
}
func (v *version) Secrets() informers.SecretInformer {
	return &secretInformer{factory: v.factory}
}
func (v *version) Services() informers.ServiceInformer {
	return &serviceInformer{factory: v.factory}
}
func (v *version) ServiceAccounts() informers.ServiceAccountInformer {
	return &serviceAccountInformer{factory: v.factory}
}
